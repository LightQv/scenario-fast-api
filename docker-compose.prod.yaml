name: "scenario-api"

services:
  scenario-postgres:
    image: postgres:16-alpine
    container_name: scenario-postgres
    restart: always
    volumes:
      - scenario-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - scenario-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

  scenario-api:
    image: vivianquerenet/scenario-api:latest
    restart: always
    container_name: scenario-api
    volumes:
      - scenario-uploads-data:/scenario/app/uploads
    ports:
      - "5001:8000"
    env_file:
      - .env.prod
    networks:
      - scenario-network
    depends_on:
      scenario-postgres:
        condition: service_healthy

volumes:
  scenario-postgres-data:
  scenario-uploads-data:

networks:
  scenario-network:
    driver: bridge